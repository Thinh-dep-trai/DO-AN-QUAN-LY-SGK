/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Giao_Dien;

import DAO.Chi_TietNhapDAO;
import Entity.SoCTNhap;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ASUS
 */
public class ChiTietNhap extends javax.swing.JPanel {
     DefaultTableModel model;
    private ArrayList<SoCTNhap> listNhap;
    /**
     * Creates new form ChiTietNhap
     */
    public ChiTietNhap() {
        initComponents();
        listNhap = new ArrayList<>();
        model = (DefaultTableModel) Table.getModel();
        loadAll("");
    }
    int i ;
    private void loadAll(String dk){
        i = 1;
        try{
            String sql = " select * "
                       + " from SoChiTietNhap "
                       + dk;
            Connection conn = Database.getConnection();
            PreparedStatement ps = conn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
          
            while(rs.next()){
                String [] row;
                row = new String []{
                     String.valueOf(i++),
                     rs.getString("TimeGD"),
                     rs.getString("MaPhieu"),
                     rs.getString("MaNV"),
                     rs.getString("MaNCC"),
                     rs.getString("MaSP"),
                     rs.getString("DVT"),
                     String.valueOf(rs.getInt("SoLuong")),
                     String.valueOf(rs.getLong("DonGia"))
                };
                model.addRow(row);
            }
            rs.close();
            ps.close();
            conn.close();
        }
        catch(Exception ex){
            ex.printStackTrace();
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtSoLuong = new javax.swing.JTextField();
        txtMaNCC = new javax.swing.JTextField();
        txtTimeGD = new javax.swing.JTextField();
        txtMaNV = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtMaPhieu = new javax.swing.JTextField();
        txtMaSP = new javax.swing.JTextField();
        txtDVT = new javax.swing.JTextField();
        txtDonGia = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        Add = new javax.swing.JButton();
        Reset = new javax.swing.JButton();
        Delete = new javax.swing.JButton();
        Find = new javax.swing.JButton();
        txtFind = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        cbxFind = new javax.swing.JComboBox<>();
        DeleteAll = new javax.swing.JButton();
        cbxLuaChon = new javax.swing.JComboBox<>();
        Sort = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        cbxSort = new javax.swing.JComboBox<>();
        Refresh = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 51));
        jLabel1.setText("Sổ chi tiết nhập kho");

        jPanel4.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel3.setText("Thời gian giao dịch:");

        jLabel4.setText("Mã phiếu:");

        jLabel6.setText("Mã nhà cung cấp:");

        jLabel7.setText("Số lượng:");

        jLabel5.setText("Mã nhân viên lập phiếu:");

        jLabel8.setText("Đơn giá:");

        jLabel10.setText("Mã sản phẩm:");

        jLabel11.setText("Đơn vị tính:");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtMaNV, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3))
                        .addGap(34, 34, 34)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtTimeGD, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMaPhieu, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(38, 38, 38)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtMaSP, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE)
                            .addComponent(txtMaNCC, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDVT)))
                    .addComponent(jLabel10))
                .addGap(55, 55, 55)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtSoLuong, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE)
                    .addComponent(txtDonGia))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTimeGD, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMaNCC, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtMaPhieu, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtMaSP, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDonGia, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDVT, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(36, 36, 36))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(txtMaNV, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20))))
        );

        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Số thứ tự", "Thời gian giao dịch", "Mã phiếu", "Mã nhân viên lập phiếu", "Mã nhà cung cấp", "Mã sản phẩm", "Đơn vị tính", "Số lượng ", "Đơn giá"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, true, true, true, true, false, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(Table);

        jPanel3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        Add.setText("Add");
        Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddActionPerformed(evt);
            }
        });

        Reset.setText("Reset");
        Reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetActionPerformed(evt);
            }
        });

        Delete.setText("Delete");
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });

        Find.setText("Find:");
        Find.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FindActionPerformed(evt);
            }
        });

        jLabel9.setText("Chọn thông tin:");

        cbxFind.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Thời gian giao dịch", "Mã phiếu", "Mã sản phẩm", "Mã nhân viên", "Mã nhà cung cấp" }));
        cbxFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxFindActionPerformed(evt);
            }
        });

        DeleteAll.setText("DeleteAll");
        DeleteAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteAllActionPerformed(evt);
            }
        });

        cbxLuaChon.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tăng dần", "Giảm dần" }));

        Sort.setText("Sort");
        Sort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SortActionPerformed(evt);
            }
        });

        jLabel14.setText("Chọn thông tin:");

        cbxSort.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Số lượng", "Đơn giá" }));
        cbxSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxSortActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addComponent(Find)
                            .addGap(33, 33, 33)
                            .addComponent(txtFind, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                .addGap(65, 65, 65)
                                .addComponent(Add)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Reset))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(cbxFind, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(290, 290, 290)))
                .addContainerGap(30, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(DeleteAll)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Delete)
                .addGap(38, 38, 38))
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(121, 121, 121)
                    .addComponent(cbxSort, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(cbxLuaChon, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Sort, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addContainerGap(16, Short.MAX_VALUE)))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFind, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Find))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(cbxFind, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(jLabel14)
                .addGap(68, 68, 68)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Add)
                    .addComponent(Reset))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DeleteAll)
                    .addComponent(Delete))
                .addContainerGap(14, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(118, 118, 118)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cbxSort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cbxLuaChon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(Sort)
                    .addContainerGap(113, Short.MAX_VALUE)))
        );

        Refresh.setText("Refresh");
        Refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RefreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(530, 530, 530))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(Refresh)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1385, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1)
                .addGap(11, 11, 11)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(Refresh)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(180, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents
 public boolean checkNull() {
        if (txtTimeGD.getText().equals("")) {
            JOptionPane.showConfirmDialog(this, "Chưa nhập thời gian giao dịch");
            txtTimeGD.requestFocus();
            return false;
        } else if (txtMaPhieu.getText().equals("")) {
            JOptionPane.showConfirmDialog(this, "Chưa nhập mã phiếu ");
            txtMaPhieu.requestFocus();
            return false;
        } else if (txtMaNV.getText().equals("")) {
            JOptionPane.showConfirmDialog(this, "Chưa nhập mã nhân viên");
            txtMaNV.requestFocus();
            return false;
        } else if (txtMaNCC.getText().equals("")) {
            JOptionPane.showConfirmDialog(this, "Chưa nhập mã nhà cung cấp");
            txtMaNCC.requestFocus();
            return false;
        }else if (txtMaSP.getText().equals("")) {
            JOptionPane.showConfirmDialog(this, "Chưa nhập mã sản phẩm");
            txtMaSP.requestFocus();
            return false;
        }else if (txtDVT.getText().equals("")) {
            JOptionPane.showConfirmDialog(this, "Chưa nhập đơn vị tính");
            txtDVT.requestFocus();
            return false;
        }else if (txtSoLuong.getText().equals("")) {
            JOptionPane.showConfirmDialog(this, "Chưa nhập số lượng");
            txtSoLuong.requestFocus();
            return false;
        }   else if (txtDonGia.getText().equals("")) {
            JOptionPane.showConfirmDialog(this, "Chưa nhập đơn giá");
            txtDonGia.requestFocus();
            return false;
        } 
        else {
            return true;
        }
    }
    private void TableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableMouseClicked
        int selectedRow = Table.getSelectedRow();
        if (selectedRow >= 0) {
            txtTimeGD.setText(Table.getValueAt(selectedRow, 1).toString());
            txtMaPhieu.setText(Table.getValueAt(selectedRow,2).toString());
            txtMaNV.setText(Table.getValueAt(selectedRow, 3).toString());
            txtMaNCC.setText(Table.getValueAt(selectedRow, 4).toString());
            txtMaSP.setText(Table.getValueAt(selectedRow, 5).toString());
            txtDVT.setText(Table.getValueAt(selectedRow, 6).toString());
            txtSoLuong.setText(Table.getValueAt(selectedRow, 7).toString());
            txtDonGia.setText(Table.getValueAt(selectedRow, 8).toString());
        }
    }//GEN-LAST:event_TableMouseClicked
    public void showResult() {
            for(SoCTNhap xuat : listNhap){
                 model.addRow(new Object[]{i++,xuat.getTimeGD(),xuat.getMaPhieu(),xuat.getMaNV(),xuat.getMaNCC(),xuat.getMaSP(),xuat.getDVT(),xuat.getSoLuong(),xuat.getDonGia() });
            }
           
    }
    private void AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddActionPerformed
        if (checkNull()) {
            try{
                SoCTNhap nhap = new SoCTNhap();
                SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd");
                nhap.setTimeGD(df.parse(txtTimeGD.getText()));
                nhap.setMaPhieu(txtMaPhieu.getText());
                nhap.setMaNV(txtMaNV.getText());
                nhap.setMaNCC(txtMaNCC.getText());
                nhap.setMaSP(txtMaSP.getText());
                nhap.setDVT(txtDVT.getText());
                nhap.setSoLuong(Integer.parseInt(txtSoLuong.getText()));
                nhap.setDonGia(Long.parseLong(txtDonGia.getText()));
                Chi_TietNhapDAO dao = new Chi_TietNhapDAO();
                dao.insert(nhap);
                listNhap.add(nhap);
                showResult();
                listNhap.remove(nhap);
            }
            catch(Exception ex){
                JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage());
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_AddActionPerformed

    private void ResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResetActionPerformed
        txtTimeGD.setText("");
        txtMaPhieu.setText("");
        txtMaNV.setText("");
        txtMaNCC.setText("");
        txtMaSP.setText("");
        txtDVT.setText("");
        txtSoLuong.setText("");
        txtDonGia.setText("");
    }//GEN-LAST:event_ResetActionPerformed

    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
        int removeIndex = Table.getSelectedRow();// lấy chỉ số dòng được chọn
        if (removeIndex == -1) {
            JOptionPane.showConfirmDialog(this, "Hãy chọn dòng cần xóa");
        }
        else {
            try{
                SoCTNhap xuat = new SoCTNhap();
                SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd");
                xuat.setTimeGD(df.parse(txtTimeGD.getText()));
                xuat.setMaPhieu(txtMaPhieu.getText());
                xuat.setMaNV(txtMaNV.getText());
                xuat.setMaNCC(txtMaNCC.getText());
                xuat.setMaSP(txtMaSP.getText());
                xuat.setDVT(txtDVT.getText());
                xuat.setSoLuong(Integer.parseInt(txtSoLuong.getText()));
                xuat.setDonGia(Long.parseLong(txtDonGia.getText()));
                Chi_TietNhapDAO dao = new Chi_TietNhapDAO();
                dao.delete(xuat);
                model.setRowCount(0);
                loadAll("");
            }catch(Exception ex){
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_DeleteActionPerformed

    private void FindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FindActionPerformed
        String dk = null;
        if (cbxFind.getSelectedItem().equals("Thời gian giao dịch")) {
            if (txtFind.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Chưa nhập thời gian giao dịch");
            }
            else {
                model.setNumRows(0);
                dk = " where TimeGD = N'" + txtFind.getText() + "'";
            }
        }
        else if(cbxFind.getSelectedItem().equals("Mã nhân viên")){
            if (txtFind.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Chưa nhập mã số nhân viên");
            }
            else {
                model.setNumRows(0);
                dk = "where MaNV = N'" + txtFind.getText() + "'";
            }
        }
        else if(cbxFind.getSelectedItem().equals("Mã phiếu")){
            if (txtFind.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Chưa nhập mã phiếu");
            }
            else {
                model.setNumRows(0);
                dk = "where MaPhieu = N'" + txtFind.getText() + "'";
            }
        }
        else if(cbxFind.getSelectedItem().equals("Mã nhà cung cấp")){
            if (txtFind.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Chưa nhập mã nhà cung cấp");
            }
            else {
                model.setNumRows(0);
                dk = "where MaNCC = N'" + txtFind.getText() + "'";
            }
        }
        else {
            if (txtFind.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Chưa nhập mã sản phẩm");
            }
            else {
                model.setNumRows(0);
                dk = "where MaSP = N'" + txtFind.getText() + "'";
            }
        }
        loadAll(dk);
    }//GEN-LAST:event_FindActionPerformed

    private void cbxFindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxFindActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxFindActionPerformed

    private void DeleteAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteAllActionPerformed
        Chi_TietNhapDAO dao = new Chi_TietNhapDAO();
        dao.deleteAll();
    }//GEN-LAST:event_DeleteAllActionPerformed

    private void SortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SortActionPerformed
        if(cbxSort.getSelectedItem().equals("Số lượng")){
            if(cbxLuaChon.getSelectedItem().equals("Tăng dần")){
                model.setNumRows(0);
                loadAll(" order by SoLuong asc");
            }
            else{
                model.setNumRows(0);
                loadAll(" order by SoLuong desc");
            }
        }
        else if (cbxSort.getSelectedItem().equals("Đơn giá")){
            if(cbxLuaChon.getSelectedItem().equals("Tăng dần")){
                model.setNumRows(0);
                loadAll(" order by DonGia asc");
            }
            else{
                model.setNumRows(0);
                loadAll(" order by DonGia desc");
            }
        }
    }//GEN-LAST:event_SortActionPerformed

    private void cbxSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxSortActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxSortActionPerformed

    private void RefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefreshActionPerformed
        model.setNumRows(0);
        loadAll("");
    }//GEN-LAST:event_RefreshActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Add;
    private javax.swing.JButton Delete;
    private javax.swing.JButton DeleteAll;
    private javax.swing.JButton Find;
    private javax.swing.JButton Refresh;
    private javax.swing.JButton Reset;
    private javax.swing.JButton Sort;
    private javax.swing.JTable Table;
    private javax.swing.JComboBox<String> cbxFind;
    private javax.swing.JComboBox<String> cbxLuaChon;
    private javax.swing.JComboBox<String> cbxSort;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField txtDVT;
    private javax.swing.JTextField txtDonGia;
    private javax.swing.JTextField txtFind;
    private javax.swing.JTextField txtMaNCC;
    private javax.swing.JTextField txtMaNV;
    private javax.swing.JTextField txtMaPhieu;
    private javax.swing.JTextField txtMaSP;
    private javax.swing.JTextField txtSoLuong;
    private javax.swing.JTextField txtTimeGD;
    // End of variables declaration//GEN-END:variables
}
